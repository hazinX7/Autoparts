@model IEnumerable<autoparts.Models.CartItem>

@{
    ViewData["Title"] = "Оформление заказа";
    var totalAmount = ViewBag.TotalAmount;
    var userBalance = ViewBag.UserBalance;
}

<div class="container mt-4">
    <h2>Оформление заказа</h2>

    <div class="row mt-4">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Товары в заказе</h5>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Товар</th>
                                    <th>Цена</th>
                                    <th>Количество</th>
                                    <th>Сумма</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@item.Product.Name</td>
                                        <td>@item.Product.Price.ToString("C")</td>
                                        <td>@item.Quantity</td>
                                        <td>@((item.Product.Price * item.Quantity).ToString("C"))</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Адрес доставки</h5>
                    <div class="mb-3">
                        <textarea id="deliveryAddress" class="form-control" rows="3" 
                                placeholder="Введите адрес доставки" required></textarea>
                        <div class="invalid-feedback" id="deliveryAddressError">
                            Пожалуйста, укажите адрес доставки
                        </div>
                    </div>
                    <div class="mb-3">
                        <input type="text" id="deliveryCity" class="form-control" 
                               placeholder="Город доставки" required>
                        <div class="invalid-feedback" id="deliveryCityError">
                            Пожалуйста, укажите город доставки
                        </div>
                    </div>
                    <div class="mb-3">
                        <textarea id="comment" class="form-control" rows="3" 
                                 placeholder="Комментарий"></textarea>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Информация о заказе</h5>
                    <div class="mb-3">
                        <label class="form-label">Сумма заказа</label>
                        <p class="form-control-static">@totalAmount.ToString("C")</p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ваш баланс</label>
                        <p class="form-control-static">@userBalance.ToString("C")</p>
                    </div>
                    @if (userBalance < totalAmount)
                    {
                        <div class="alert alert-warning">
                            Недостаточно средств на балансе. 
                            <a href="/Balance" class="alert-link">Пополнить баланс</a>
                        </div>
                    }
                    <button class="btn btn-primary w-100" onclick="placeOrder()"
                            @(userBalance < totalAmount ? "disabled" : "")>
                        Оформить заказ
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function validateForm() {
            let isValid = true;
            const deliveryAddress = document.getElementById('deliveryAddress');
            const deliveryCity = document.getElementById('deliveryCity');
            
            // Очищаем предыдущие ошибки
            deliveryAddress.classList.remove('is-invalid');
            deliveryCity.classList.remove('is-invalid');
            
            // Проверяем адрес доставки
            if (!deliveryAddress.value.trim()) {
                deliveryAddress.classList.add('is-invalid');
                isValid = false;
            }
            
            // Проверяем город доставки
            if (!deliveryCity.value.trim()) {
                deliveryCity.classList.add('is-invalid');
                isValid = false;
            }
            
            return isValid;
        }

        function placeOrder() {
            if (!validateForm()) {
                toastr.error('Пожалуйста, заполните все обязательные поля');
                return;
            }

            const data = {
                deliveryAddress: document.getElementById('deliveryAddress').value.trim(),
                deliveryCity: document.getElementById('deliveryCity').value.trim(),
                comment: document.getElementById('comment')?.value?.trim()
            };

            fetch('/Order/PlaceOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    toastr.success(result.message);
                    setTimeout(() => {
                        window.location.href = '/Order/History';
                    }, 1500);
                } else {
                    toastr.error(result.message);
                }
            })
            .catch(error => {
                console.error('Ошибка:', error);
                toastr.error('Произошла ошибка при оформлении заказа');
            });
        }
    </script>
} 